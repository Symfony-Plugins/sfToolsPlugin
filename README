sfToolsPlugin
-------------

The **sfToolsPlugin** provides some tools and debugging functions:

## sfDebugTools.class.php

Debugging functions:

  * `dump()`: Dumps an array or object. Displays, dies or returns the result.
Note that Doctrine objects are automatically detected.
  * `dump2()`: Same function as dump() but more suitable and readable for a console debug.
  * `getElapsedTime()`: Get the elapsed time between 2 time references.

## sfFileTools.class.php

File tools functions:

  * `sanitizeFilename()`: Make a filename safe to use in the OS, command line...
  (need `iconv` to be installed)

## sfFixflashSessionStorage.class.php

Session storage handler to avoid the session loss problem with Flash upload.

## sfAdvFilesystem.class.php ##

The sfAdvFilesystem class extends the original sfFileSystem class with several
useful funtions.

  * `clearDir`: Clear the content of a directory
  * `clearDirRec`: Clear the content of a directory recursively
  * `copy`: Copy a file and returns if succeded of not.

Installation
------------

 * Install the plugin: (depends on the symfony you are using)

        $ symfony plugin:install sfToolsPlugin

   (Download it and unzip in your `/plugins` directory or use an SVN external `http://svn.symfony-project.com/plugins/sfToolsPlugin/tags/RELEASE_1_0_2/`)

 * Clear you cache

        $ symfony cc

Usage
=====

## sfDebugTools.class.php

### `dump()`:

* Print an object and stop the process

        [php]
        sfDebugTools::dump($this->getUser()->getAttributeHolder(), '$this->getUser()->getAttributeHolder()', true);

Will output:

      Process stopped by sfDebugTools:dump()
      » file     : C:\wamp\www\symfony1.4.14\apps\frontend\modules\index\actions\actions.class.php
      » line     : 20
      » class    : indexActions
      » function : executeIndex

      $this->getUser()->getAttributeHolder() (sfNamespacedParameterHolder) :
      sfNamespacedParameterHolder Object
      (
          [default_namespace:protected] => symfony/user/sfUser/attributes
          [parameters:protected] => Array
              (
              )

      )

* Print an object without stopping the process

        [php]
        sfDebugTools::dump($this->getUser()->getAttributeHolder(), '$this->getUser()->getAttributeHolder()', false);

* Retrieve the dump of an object as a string

        [php]
        $dump = sfDebugTools::dump($this->getUser()->getAttributeHolder(), '$this->getUser()->getAttributeHolder()', false, true);
        echo $dump;

### `dump2()`:

Acts the same way as `dump()` but doesn't display all the backtrace informations.

### `getElapsedTime()`:

* Get the elapsed time between 2 time references:

        [php]
        $start = sfDebugTools::getMicroTimeNow();
        usleep(rand(1, 1000000));
        $end = sfDebugTools::getMicroTimeNow();
        sfDebugTools::dump(sfDebugTools::getElapsedTime($start, $end), 'sleep in seconds', 0);

Will output:

    sleep in seconds:
    0.7101

## sfFileTools.class.php

### `sanitizeFilename()`:

 * Make a filename safe to use in the OS, command line:

        [php]
        echo sfFileTools::sanitizeFilename('--logö  _  __   ___   ora@@ñ--~gé--.gif');
        
Will output:

    "logo_orange.gif"

## sfFixflashSessionStorage.class.php

Update your `factories.yml` file:

    all:
      storage:
        class: sfFixflashSessionStorage
        param:
          session_name: "mySymfonySession"

Then when using your flash Uploader, use something like this:

    [php]
    echo url_for("fileinfo/upload"); ?>?session_id=<?php echo session_id() ?>",

## sfAdvFilesystem.class ##

 * `clearDir`: Clears the content of a directory

        [php]
        $fs = new sfAdvFilesystem();
        $fs->clearDir('/var/www/myProject/web/upload/photos/user46546/big')

 * `clearDirRec`: Clears the content of a directory recursively

        [php]
        $fs->clearDirRec('/var/www/myProject/upload/temp', '/temp');

 * `copy`: Copy a file and return if succeded of not.

        [php]
        $ret = $fs->copy('/var/www/myProject/web/uploads/tmp/users/5455_thumb.jpg', '/var/www/myProject/web/uploads/thumbs/user5455_thumb.jpg', array('override' => true));

>**TIP**
>Of course if's better to add a shortcut in your base `actions` class, so you can call
>it with:
>
>        $this->dump(...);

TODO
====

Support
=======

Send me an email or report bugs on the symfony TRAC, I could also answer if you ask on the
symfony mailing list.

Changelog
=========

(check the changelog tab)

----

See you. [COil](http://www.strangebuzz.com) :)

----

This plugin is sponsored by [SQL-Technologies](http://www.sqltechnologies.com)

 ![SQL Technologies](http://www.php-debug.com/images/sql.gif)